(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{487:function(a,t,v){"use strict";v.r(t);var _=v(19),l=Object(_.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h2",{attrs:{id:"概要介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概要介绍"}},[a._v("#")]),a._v(" 概要介绍")]),a._v(" "),v("p",[a._v("内存管理可以说是内核中最重要也是最复杂的一部分，其特点在于非常需要处理器与内核之间的协作。")]),a._v(" "),v("p",[a._v("内存管理的实现主要涵盖：")]),a._v(" "),v("ol",[v("li",[a._v("物理内存的管理")]),a._v(" "),v("li",[a._v("页表的操作，伙伴系统的操作")]),a._v(" "),v("li",[a._v("分配小内存的时候的slab、slub、slob的分配器是如何工作")]),a._v(" "),v("li",[a._v("vmalloc的机制")]),a._v(" "),v("li",[a._v("页面的回收机制等")])]),a._v(" "),v("p",[a._v("本章节就是来详细描述内存在内核中是如何工作的")]),a._v(" "),v("h2",{attrs:{id:"内存管理概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存管理概述"}},[a._v("#")]),a._v(" 内存管理概述")]),a._v(" "),v("p",[a._v("从分层的角度来看内存管理：")]),a._v(" "),v("ul",[v("li",[a._v("用户空间层：linux经常使用的系统编程 malloc()/mmap()/mlock/madvise()/mremap()")]),a._v(" "),v("li",[a._v("内核空间层:sys_mmap 、VMA、缺页中断、匿名页面、pagecache、页面回收、slab、KSM、页表管理等等")]),a._v(" "),v("li",[a._v("硬件层：MMU、TLB、cache、DDR")])]),a._v(" "),v("h2",{attrs:{id:"需要思考的问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#需要思考的问题"}},[a._v("#")]),a._v(" 需要思考的问题")]),a._v(" "),v("ul",[v("li",[a._v("在系统启动时，ARM Linux内核是如何知道系统中有多大的内存空间？")]),a._v(" "),v("li",[a._v("在32位系统中，用户空间和内核空间比例一般为3:1，可以修改为其他比例吗？")])]),a._v(" "),v("h2",{attrs:{id:"具体的章节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#具体的章节"}},[a._v("#")]),a._v(" 具体的章节")]),a._v(" "),v("ol",[v("li",[a._v("物理内存的初始化")])])])}),[],!1,null,null,null);t.default=l.exports}}]);